theory ejercicio1 imports Main
begin

value "[2,6,8] @ [6,9,8,7::int]"


ML \<open> 
  let 
    val ctxt = @{context}
    val goal = @{prop "P \<or> Q \<Longrightarrow> Q \<or> P "}
  in
    Goal.prove ctxt ["P", "Q"] [] goal
    (fn _ =>  eresolve_tac @{context} @{thms disjE } 1 
      THEN resolve_tac @{context} @{thms disjI2 } 1
      THEN  assume_tac @{context} 1
      THEN resolve_tac @{context} @{thms disjI1 } 1
      THEN assume_tac @{context} 1
     )
  end
\<close> 
  
lemma app_Nil2 [simp]: "xs @ [] = xs"
apply(induct_tac xs)
apply(auto)
  done


lemma app_assoc [simp]: "(xs @ ys) @ zs = xs @ (ys @ zs)"
apply(induct_tac xs)
apply(auto)
  done
    
lemma rev_app [simp]: "rev(xs @ ys) = (rev ys) @ (rev xs)"
apply(induct_tac xs)
apply(auto)
  done
    
theorem rev_rev [simp]: "rev(rev xs) = xs"
apply(induct_tac xs)
apply(auto)
done
  end                                      